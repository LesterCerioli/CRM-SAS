swagger: "2.0"
info:
  title: "Medical SAS API"
  description: "API for managing medical services, including authentication, patients, and appointments."
  version: "1.0.1"
  contact: {}
paths:
  /patients:
    post:
      tags:
        - Patients
      summary: "Create a new patient"
      description: "Creates a new patient in the system."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: patient
          description: "Patient information."
          required: true
          schema:
            $ref: '#/definitions/controllers.CreatePatientRequest'
      responses:
        "201":
          description: "Details of the created patient."
          schema:
            type: object
            additionalProperties: true
        "400":
          description: "Invalid input."
          schema:
            type: object
            additionalProperties: true
        "500":
          description: "Internal server error."
          schema:
            type: object
            additionalProperties: true
  /patients/{cpf}:
    get:
      tags:
        - Patients
      summary: "Get patient by CPF"
      description: "Retrieve a patient's details using their CPF."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: cpf
          description: "Patient CPF (without formatting)."
          required: true
          type: string
      responses:
        "200":
          description: "Details of the patient."
          schema:
            type: object
            additionalProperties: true
        "404":
          description: "Patient not found."
          schema:
            type: object
            additionalProperties: true
        "500":
          description: "Internal server error."
          schema:
            type: object
            additionalProperties: true
  /appointments:
    post:
      tags:
        - Appointments
      summary: "Create a new appointment"
      description: "Creates a new appointment in the system."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: appointment
          description: "Appointment details."
          required: true
          schema:
            $ref: '#/definitions/contracts.AppointmentDTO'
      responses:
        "201":
          description: "Appointment created successfully."
          schema:
            type: object
            properties:
              message:
                type: string
              id:
                type: string
        "400":
          description: "Invalid input."
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: "Internal server error."
          schema:
            type: object
            properties:
              error:
                type: string
  /appointments/{id}:
    get:
      tags:
        - Appointments
      summary: "Get appointment by ID"
      description: "Retrieve the details of an appointment using its ID."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: "Appointment ID."
          required: true
          type: string
      responses:
        "200":
          description: "Details of the appointment."
          schema:
            $ref: '#/definitions/contracts.AppointmentDTO'
        "404":
          description: "Appointment not found."
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: "Internal server error."
          schema:
            type: object
            properties:
              error:
                type: string

definitions:
  controllers.CreatePatientRequest:
    type: object
    properties:
      name:
        type: string
        description: "The patient's full name."
      cpf:
        type: string
        description: "The CPF of the patient."
      dob:
        type: string
        format: date
        description: "Date of birth of the patient."
      gender:
        type: string
        enum:
          - Male
          - Female
          - Other
        description: "Gender of the patient."
      address:
        type: string
        description: "The address of the patient."
      contact:
        type: string
        description: "The contact information of the patient."
      organization_id:
        type: string
        format: uuid
        description: "The ID of the organization the patient is associated with."
  contracts.AppointmentDTO:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
        description: "The date and time of the appointment."
      patient_id:
        type: string
        description: "The ID of the patient for the appointment."
      doctor_id:
        type: string
        description: "The ID of the doctor for the appointment."
      description:
        type: string
        description: "A brief description or purpose of the appointment."
